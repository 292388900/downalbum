   
--require "star"


--config
name_en = 'flickrAlbum';
name_cn = 'flickr相册照片批量下载器';
prefix = 'FLCR';
ver = '1.3';
firstpagename = 'flickr首页';
firstpageurl = 'http://www.flickr.com';
mainwidth = 940;
mainheight = 700;
imagewidth = 120;
imageheight = 92;
maxalbumsperpage = 20;
maxphotosperpage = 24;

--返回结果
ndowntype = 0;
albumcount = 0;
albums = {photos={}};

--c函数初始化
msgprint = msgprint or print
SetDirectryName = SetDirectryName or print
AddOneAlbum = AddOneAlbum or print
AddOnePhoto = AddOnePhoto or print
InputUrl = InputUrl or print
StartGetAlbum = StartGetAlbum or print
StartDownAlbum = StartDownAlbum or print
SelectDownType = SelectDownType or print
star.DecodeEscapeUsequence = star.DecodeEscapeUsequence or function(x) return x end
star.utf8s2ms = star.utf8s2ms or print

---------------------------------------------------------------------------
--1.最小单位：图片
--photo是一个表，可以使用的字段：id,name,preview,orign,url,等
PHOTO = {mt={}}

--创建一个图片,为其设置元表
function PHOTO.new()
     local photo = {}
     setmetatable(photo,PHOTO.mt)
     return photo
end
---------------------------------------------------------------------------

---------------------------------------------------------------------------
--2.次小单位：图片数组
PHOTOS = {mt={}}

--当访问图片数组的某索引不存在图片时，创建之
PHOTOS.mt.__index = function(t,index)
          local photo = PHOTO.new()
          t[index] = photo
          return photo;
end

--创建一个图片数组,为其设置元表
function PHOTOS.new()
     local photos = {}
     setmetatable(photos,PHOTOS.mt)
     return photos
end

---------------------------------------------------------------------------
--3.相册，一个相册是一个表，内部包含一个图片数组：PHOTOS
--可使用字段：id,name,url,preview,photos
ALBUM = {mt={}}

--创建一个相册,为其设置元表
function ALBUM.new()
     local album = {}
     album.photos = PHOTOS.new()
     setmetatable(album,ALBUM.mt)
     return album
end

---------------------------------------------------------------------------
--4.相册数组：ALBUMS
ALBUMS = {mt={}}

--当访问相册数组的某索引不存在相册时，创建之
ALBUMS.mt.__index = function(t,index)
     local album = ALBUM.new()
     album.photos = PHOTOS.new()
     --print('访问')
     t[index] = album
     return album;
end

--创建一个相册数组,为其设置元表
function ALBUMS.new()
     local albums = {}
     setmetatable(albums,ALBUMS.mt)
     return albums
end

---------------------------------------------------------------------------
--your codes
---------------------------------------------------------------------------

--var
username = '';
account = '';
ndowntype = 0;
albums = ALBUMS.new() 
---------------------------------------------------------------------------

function getaccountfromurl(url)
	_,_,account = string.find(url,'photos/([^/^?]*)')
	if account==nil then
		msgbox('输入的网址有误，请参考使用帮助输入，或者联系开发者!')
		account=''
	end
	SetDirectryName(account)
	return account
end

function getcatalbum(url)
	local html = nil
	local ipage = 1
	local bfound = false
	local albumcount = 0
	
	while true do
		msgprint('正在获取第 '..ipage..'页相片集……')
		url = 'http://www.flickr.com/photos/' .. account .. '/sets/?&page=' .. ipage
		ipage = ipage + 1
		html = star.gethtml(url)
		if html==nil or html=='' then
			msgbox(url)
			return
		end
		html = star.utf8s2ms(html)
		bfound = false
		
		for src,href,name,num in string.gfind(html, [[class="Sets.-(http[^"^']*.jpg).-href="(.-)".-title="(.-)".-<p>.-(.-) ]]) do
			bfound = true
			href = 'http://www.flickr.com' .. href
			_,_,id = string.find(href,[[/sets/(%d+)]])
			albumcount = albumcount + 1
			albums[albumcount] = {}
			albums[albumcount].id = id
			albums[albumcount].preview = src
			albums[albumcount].url = href
			albums[albumcount].name = name
			num = star.trim(num)
			num = string.gsub(num,',','')
			albums[albumcount].total = tonumber(num)
		end
		
		if bfound==false then
			break
		end
	end
    
end

function getonealbum(url)
	local id = nil
	local html = nil
	local ipage = 1
	local bfound = false
	local albumcount = 0
	
	_,_,id = string.find(url,[[/sets/(%d+)]])
	if id==nil then
		msgbox('请输入当个相册网址!')
		return
	end
	
	url = 'http://www.flickr.com/photos/'.. account ..'/sets/'.. id ..'/'
	html = star.gethtml(url)
	html = star.utf8s2ms(html)
	if html==nil or html=='' then
		msgbox(url)
		return
	end
	
	_,_,src = string.find(html,[[photo%-display%-item.-src.-(http.-.jpg)]])
	_,_,name,num = string.find(html,[["set%-title">(.-)<.-<h1>(%d+)]])
	
	albumcount = albumcount + 1
	albums[albumcount] = {}
	albums[albumcount].id = id
	albums[albumcount].preview = src
	albums[albumcount].url = url
	albums[albumcount].name = name
	num = star.trim(num)
	num = string.gsub(num,',','')
	albums[albumcount].total = tonumber(num)	
end

function GetAlbums(ntype,url)
	ndowntype = ntype
	albums = {}
	getaccountfromurl(url)
	if ntype==0 then
		getonealbum(url)		
	elseif ntype==1 then
		getcatalbum(url)
	else
		star.msgbox('暂不至支持此种下载模式!请联系作者解决')
	end
	
	for i = 1,#albums do
		AddOneAlbum(albums[i].id,albums[i].name,albums[i].url,albums[i].preview,albums[i].total);
	end
	
end

function GetOriginalImage(albumid,photoid)
	local url=nil
	local html=nil
	
	url = string.format('http://www.flickr.com/photos/%s/%s/sizes/o/in/set-%s/',account,photoid,albumid)
	html = star.gethtml(url)
	html = star.utf8s2ms(html)
	_,_,src = string.find(html,[["allsizes%-photo".-src.-(http.-.jpg)]])
	return src
end
    
function GetOneAbumPhotos_1(index)
	local photocount = 0;
	local photos = PHOTOS.new()
	local html=''
	local photosperpage = 72
	
	pages,_ =math.modf(albums[index].total/photosperpage) 
	rest = math.mod(albums[index].total,photosperpage)
	pages = pages + (rest~=0 and 1 or 0)
	
	for ipage=1,pages do 
		msgprint('正在获取第 ' .. ipage .. '/' .. pages .. '页专辑信息……' )
		url = albums[index].url..'page'..ipage
		html = star.gethtml(url)
		if html==nil or html=='' then
			break
		end
		html = star.utf8s2ms(html)
		
		for id,href,name,src in string.gfind(html, [[photo%-display%-item.-id=.-(%d+).-href="(.-)".-title="(.-)".-(http[^"^']*.jpg)]]) do
			if #id>5 then
				src = string.gsub(src,[[\/]],'/')
				photocount = photocount + 1;
				photos[photocount].preview = src
				src = string.gsub(src,'_z.','_b.')
				osrc = GetOriginalImage(albums[index].id,id)
				if osrc~=nil then
					src = osrc
				end
				photos[photocount].orign = src;
				photos[photocount].id = id;
				photos[photocount].name = name
			end
		end
		
	end
	
	return photos
end

function GetOneAbumPhotos(index)
	local photocount = 0
	local photos = PHOTOS.new()
	local html=''
	local photosperpage = 72
	local src = ''
	local bfound = false
	local ipage = 1
	
	pages,_ =math.modf(albums[index].total/photosperpage) 
	rest = math.mod(albums[index].total,photosperpage)
	pages = pages + (rest~=0 and 1 or 0)
	
	--for ipage=1,pages do 
	while true do
		msgprint('正在获取第 ' .. ipage .. '页专辑信息……' )
		url = albums[index].url..'page'..ipage
		ipage = ipage + 1
		html = star.gethtml(url)
		html = star.utf8s2ms(html)
		_,_,html = string.find(html,[[Y.listData(.-)};]])
		if html==nil or html=='' then
			break
		end
		bfound = false
		
		for name,sizes,id in string.gfind(html,[["name":"(.-)".-"sizes":(.-)}},.-id":"(.-)"]]) do 
			src = ''
			for s in string.gfind(sizes,[[(http.-.jpg)]]) do 
				src = s				
			end
			src = string.gsub(src,[[\/]],'/')
			
			bfound = true
			photocount = photocount + 1
			photos[photocount].preview = src
			photos[photocount].orign = src
			photos[photocount].id = id
			photos[photocount].name = star.DecodeEscapeUsequence(name)
		end
		
		if bfound==false then
			break
		end
	end
	
	return photos
end

function GetPhotos(index)
	if albums[index].name~=nil then
		msgprint('正在获取图片信息： '..albums[index].name);
	end
	photos = GetOneAbumPhotos(index)
	num = table.getn(photos)
	print(num)
	for i = 1,num do
		ok = AddOnePhoto(photos[i].id,photos[i].name,photos[i].preview,photos[i].orign);
		if ok==0 then
			break
		end
	end
end

--获取相册完毕后程序调用
function OnGetAlbumEnd()
	--StartDownAlbum();
end

--下载相册完毕后程序调用
function OnDownAlbumEnd()
	
end
--[[
function test()
	--GetAlbums(0,'http://www.flickr.com/photos/wxcj/sets/72157633916918412/')
	--GetPhotos(1)
    --GetAlbums(1,'http://www.flickr.com/photos/evelynflint/sets/')
    --GetPhotos(3)
end

test()
--]]
